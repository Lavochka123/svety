# app.py
from flask import Flask, render_template, request, jsonify
import telegram
import asyncio
import threading

app = Flask(__name__, template_folder='template')

# –¢–æ–∫–µ–Ω Telegram‚Äë–±–æ—Ç–∞ (—Ç–æ—Ç –∂–µ, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ bot.py)
TELEGRAM_BOT_TOKEN = "–í–ê–®_–¢–û–ö–ï–ù_–ë–û–¢–ê"
bot = telegram.Bot(token=TELEGRAM_BOT_TOKEN)

# –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π event loop –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –µ–≥–æ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
loop = asyncio.new_event_loop()
def run_loop(loop):
    asyncio.set_event_loop(loop)
    loop.run_forever()
threading.Thread(target=run_loop, args=(loop,), daemon=True).start()

def send_message_sync(chat_id, message):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ event loop.
    –ë–ª–æ–∫–∏—Ä—É–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ (—Å —Ç–∞–π–º–∞—É—Ç–æ–º 10 —Å–µ–∫—É–Ω–¥).
    """
    future = asyncio.run_coroutine_threadsafe(
        bot.send_message(chat_id=chat_id, text=message), loop
    )
    return future.result(timeout=10)

@app.route('/invite/<invite_id>')
def invite(invite_id):
    design = request.args.get('design', 'design_elegant')
    intro = request.args.get('intro', '–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª –¥–ª—è —Ç–µ–±—è –Ω–µ—á—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–µ...')
    proposal = request.args.get('proposal', '–î–∞–≤–∞–π –ø—Ä–æ–≤–µ–¥—ë–º —ç—Ç–æ—Ç –≤–µ—á–µ—Ä –≤–º–µ—Å—Ç–µ. –Ø –∑–Ω–∞—é —É—é—Ç–Ω–æ–µ –º–µ—Å—Ç–æ!')
    chat_id = request.args.get('chat_id', None)
    # –í –¥–∞–Ω–Ω–æ–º —à–∞–±–ª–æ–Ω–µ —Å–ø–∏—Å–æ–∫ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≤—Ä–µ–º–µ–Ω–∏ —É–±—Ä–∞–Ω
    invite_data = {
        'design': design,
        'intro': intro,
        'proposal': proposal,
        'chat_id': chat_id
    }
    return render_template('invite.html', data=invite_data)

@app.route('/choose_time', methods=['GET', 'POST'])
def choose_time():
    if request.method == 'GET':
        design = request.args.get('design', 'design_elegant')
        intro = request.args.get('intro', '–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª –¥–ª—è —Ç–µ–±—è –Ω–µ—á—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–µ...')
        proposal = request.args.get('proposal', '–î–∞–≤–∞–π –ø—Ä–æ–≤–µ–¥—ë–º —ç—Ç–æ—Ç –≤–µ—á–µ—Ä –≤–º–µ—Å—Ç–µ. –Ø –∑–Ω–∞—é —É—é—Ç–Ω–æ–µ –º–µ—Å—Ç–æ!')
        chat_id = request.args.get('chat_id', None)
        times = ['üïó 19:00 | 21 —è–Ω–≤–∞—Ä—è', 'üåô 20:30 | 22 —è–Ω–≤–∞—Ä—è', '‚òï 17:00 | 23 —è–Ω–≤–∞—Ä—è']
        return render_template('choose_time.html', design=design, intro=intro, proposal=proposal, times=times, chat_id=chat_id)
    else:
        selected_time = request.form.get('selected_time')
        design = request.form.get('design')
        intro = request.form.get('intro')
        proposal = request.form.get('proposal')
        chat_id = request.form.get('chat_id')
        if chat_id:
            try:
                chat_id = int(chat_id)
            except Exception as e:
                print("–û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è chat_id:", e)
            message = f"–û—Ç–ª–∏—á–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏!\n–î–µ–≤—É—à–∫–∞ –≤—ã–±—Ä–∞–ª–∞ –≤—Ä–µ–º—è –¥–ª—è –≤—Å—Ç—Ä–µ—á–∏:\n{selected_time}"
            try:
                send_message_sync(chat_id, message)
            except Exception as e:
                print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram:", e)
        return render_template('confirmation.html', design=design, intro=intro, proposal=proposal,
                               selected_time=selected_time)

@app.route('/response', methods=['POST'])
def response():
    data = request.get_json()
    chat_id = data.get('chat_id')
    response_text = data.get('response')
    selected_time = data.get('selected_time', '')
    message = f"–î–µ–≤—É—à–∫–∞ –æ—Ç–≤–µ—Ç–∏–ª–∞: {response_text}"
    if selected_time:
        message += f"\n–í—ã–±—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è: {selected_time}"
    if chat_id:
        try:
            chat_id = int(chat_id)
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è chat_id:", e)
    try:
        send_message_sync(chat_id, message)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞ –≤ Telegram:", e)
        return jsonify({"status": "error", "message": str(e)}), 500
    return jsonify({"status": "ok"}), 200

if __name__ == '__main__':
    app.run(debug=True)
